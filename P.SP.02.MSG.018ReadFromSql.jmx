<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.6" jmeter="2.11 r1554548">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Сценарий 1. Регистрация заявки (Процесс 23/018)" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Пользовательские переменные" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="projectPath" elementType="Argument">
            <stringProp name="Argument.name">projectPath</stringProp>
            <stringProp name="Argument.value">${__property(project.path)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Корневая директория jmeter</stringProp>
          </elementProp>
          <elementProp name="contextFactory" elementType="Argument">
            <stringProp name="Argument.name">contextFactory</stringProp>
            <stringProp name="Argument.value">com.sun.jndi.fscontext.RefFSContextFactory</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="provider" elementType="Argument">
            <stringProp name="Argument.name">provider</stringProp>
            <stringProp name="Argument.value">file:/${__property(project.path)}/bindings</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="connFactory" elementType="Argument">
            <stringProp name="Argument.name">connFactory</stringProp>
            <stringProp name="Argument.value">${__property(connection.factory)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="qIN" elementType="Argument">
            <stringProp name="Argument.name">qIN</stringProp>
            <stringProp name="Argument.value">${__property(queue.in)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Очередь входящих сообщений</stringProp>
          </elementProp>
          <elementProp name="qOUT" elementType="Argument">
            <stringProp name="Argument.name">qOUT</stringProp>
            <stringProp name="Argument.value">${__property(queue.out)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Очередь исходящих сообщений</stringProp>
          </elementProp>
          <elementProp name="hostName" elementType="Argument">
            <stringProp name="Argument.name">hostName</stringProp>
            <stringProp name="Argument.value">${__property(host.name)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Адрес хоста mq</stringProp>
          </elementProp>
          <elementProp name="qmChannel" elementType="Argument">
            <stringProp name="Argument.name">qmChannel</stringProp>
            <stringProp name="Argument.value">${__property(qm.channel)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Имя канала менеджера сообщений</stringProp>
          </elementProp>
          <elementProp name="qmPort" elementType="Argument">
            <stringProp name="Argument.name">qmPort</stringProp>
            <stringProp name="Argument.value">${__property(qm.port)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Порт менеджера сообщений</stringProp>
          </elementProp>
          <elementProp name="qmName" elementType="Argument">
            <stringProp name="Argument.name">qmName</stringProp>
            <stringProp name="Argument.value">${__property(qm.name)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Имя менеджера сообщений</stringProp>
          </elementProp>
          <elementProp name="testDataPath" elementType="Argument">
            <stringProp name="Argument.name">testDataPath</stringProp>
            <stringProp name="Argument.value">${__property(testdata.path)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Путь к директории тестовых данных (для логов)</stringProp>
          </elementProp>
          <elementProp name="header_action" elementType="Argument">
            <stringProp name="Argument.name">header_action</stringProp>
            <stringProp name="Argument.value">int://CP/P.SP.02/0.1/P.SP.02.PRC.001/P.SP.02.TRN.017/P.SP.02.MSG.018</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="header_to" elementType="Argument">
            <stringProp name="Argument.name">header_to</stringProp>
            <stringProp name="Argument.value">EAEU://EEC/CP/P.SP.02/P.ACT.001</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="header_reply_to" elementType="Argument">
            <stringProp name="Argument.name">header_reply_to</stringProp>
            <stringProp name="Argument.value">EAEU://BY/CP/P.SP.02/P.ACT.001</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="testMessagePath" elementType="Argument">
            <stringProp name="Argument.name">testMessagePath</stringProp>
            <stringProp name="Argument.value">&apos;../../TestData/OP23/by/Messages/&apos;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Путь к директории с сообщениями</stringProp>
          </elementProp>
          <elementProp name="testScriptNumber" elementType="Argument">
            <stringProp name="Argument.name">testScriptNumber</stringProp>
            <stringProp name="Argument.value">&apos;018&apos;</stringProp>
            <stringProp name="Argument.desc">Номер сценария - должен совпадать с номером папки</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="edocID" elementType="Argument">
            <stringProp name="Argument.name">edocID</stringProp>
            <stringProp name="Argument.value">${__UUID}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="A_4" elementType="Argument">
            <stringProp name="Argument.name">A_4</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">Select 1</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">VN</stringProp>
        <stringProp name="dbUrl">jdbc:sqlserver://portal-stand:1433;databaseName=EEC_MQ</stringProp>
        <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">!QAZxsw2</stringProp>
        <stringProp name="poolMax">10</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">sa</stringProp>
        <stringProp name="TestPlan.comments">jdbc:sqlserver://portal-stand:1414;databasename=EEC_MQ;user=sa;password=!QAZxsw2</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Тест" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1412086094000</longProp>
        <longProp name="ThreadGroup.end_time">1410507146000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">1</stringProp>
        <stringProp name="ThreadGroup.delay">1</stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <BSFSampler guiclass="TestBeanGUI" testclass="BSFSampler" testname="Подготовка сообщений из директории" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">// Перебираем файлы xml из директории и заменяем в них uuid - вставляем в переменную с именем файла
// Для сообщений берется имя без расширения, для FLC - Обрезается все до FLC - для единообразия в ФЛК сценариях
path=${testMessagePath} + ${testScriptNumber}

log.info(&apos;${edocID}&apos;)
new File(path).eachFile()
{
	if (it.name.startsWith(&apos;MSG&apos;))
	{
		log.info(&quot;Load file &quot; + it.name)
		fileContents = &quot;&quot;
		it.eachLine { line -&gt; fileContents = fileContents + line.replaceFirst(&apos;..__UUID}&apos;, &apos;${edocID}&apos; ) + &quot;\n&quot; }
		log.info(&quot;Create message &quot; + it.name.replaceFirst(/\S*FLC/,&apos;FLC&apos;).replaceFirst(/\S*SC/,&apos;SC&apos;).minus(&apos;.xml&apos;))
		vars.put (it.name.replaceFirst(/\S*FLC/,&apos;FLC&apos;).replaceFirst(/\S*SC/,&apos;SC&apos;).minus(&apos;.xml&apos;), fileContents)	
			if (it.name == &apos;MSG_&apos; + ${testScriptNumber} + &apos;.xml&apos;)
			{
				log.info(&quot;Create message &quot; + &quot;mainMessage&quot;)
				vars.put (&quot;mainMessage&quot;, fileContents)	
			}	
	}
}

</stringProp>
        </BSFSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Корректное сообщение" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Корректное сообщение" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Корректное сообщение" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${mainMessage}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file">D:\Work\CitTest\CitTest\apache-jmeter(BY)\bin\examples\1.xml</stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получение уведомления о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1751103366">P.MSG.RCV&lt;/wsa:Action&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получение сообщения о принятии в работу" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1132320954">P.MSG.PRS&lt;/wsa:Action&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получение сообщения об успешном изменении Единого реестра" enabled="false">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1515384425">&lt;csdo:ProcessingResultCode&gt;2&lt;/csdo:ProcessingResultCode&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Transaction Controller" enabled="true">
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__BeanShell(${A_4}  == 0)}</stringProp>
          </WhileController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">1</stringProp>
              <stringProp name="CounterConfig.end">500</stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">cnt</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">false</boolProp>
            </CounterConfig>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request Status ${cnt} " enabled="true">
              <stringProp name="dataSource">VN</stringProp>
              <stringProp name="query">SELECT *  FROM [EEC_MQ].[dbo].[ProcessingEvents] left join [EEC_MQ].[dbo].[ProcessingEventTypes] on [EEC_MQ].[dbo].[ProcessingEvents].[EventType] = [EEC_MQ].[dbo].[ProcessingEventTypes].ID
  where messageID = (select ID  FROM (select top 250 ID, XMLMessage from  [EEC_MQ].[dbo].[MQMessages] order by 1 desc) a  where XMLMessage.exist(&apos;//csdo_EDocId[.=&quot;${edocID}&quot;]&apos;)=1)
  order by 1 </stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">A,B,C,D</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">portal-stand.dev.centre-it.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/sites/odata/_api/web/lists/getByTitle(&apos;Реестр заявок на регистрацию товарного знака и знака обслуживания&apos;)/items</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1385461368">${edocID}</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">true</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Структурный контроль и ФЛК" enabled="false"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Структурный контроль" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Структурный контроль" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
	&lt;soap:Body&gt;
		${SC}
	&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получение сообщения с кодом ошибки" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1892713382"> &lt;sgn:Code&gt;Common:DataError&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-255925546"> &lt;sgn:Description&gt;Структура электронного документа должна соответствовать структуре, приведенной в реестре СЭД.&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="false"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 1" enabled="false"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 1" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_1}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;1&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-280209726">&lt;sgn:Code&gt;1&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="false"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 2" enabled="false"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 2" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_2}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;2&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-151127007">&lt;sgn:Code&gt;2&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="false"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 3" enabled="false"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 3" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_3}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;3&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-22044288">&lt;sgn:Code&gt;3&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="false"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 4" enabled="false"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 4" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_4}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;4&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="107038431">&lt;sgn:Code&gt;4&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="false"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 5" enabled="false"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 5" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_5}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;5&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="236121150">&lt;sgn:Code&gt;5&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="false"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 6" enabled="false"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 6" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_6}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;6&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="365203869">&lt;sgn:Code&gt;6&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="false"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 7" enabled="false"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 7" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_7}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;7&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="494286588">&lt;sgn:Code&gt;7&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="false"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 8" enabled="false"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 8" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_8}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;8&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="623369307">&lt;sgn:Code&gt;8&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="false"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 9" enabled="false"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 9" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_9}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;9&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="752452026">&lt;sgn:Code&gt;9&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="false"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 10" enabled="false"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 10" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_10}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;10&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="320087370">&lt;sgn:Code&gt;10&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="false"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 11" enabled="false"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 11" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_11}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;11&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="449170089">&lt;sgn:Code&gt;11&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="false"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 12" enabled="false"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 12" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_12}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;12&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="578252808">&lt;sgn:Code&gt;12&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="false"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 13" enabled="false"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 13" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_13}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;13&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="707335527">&lt;sgn:Code&gt;13&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="false"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 14" enabled="false"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 14" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_14}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;14&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="836418246">&lt;sgn:Code&gt;14&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="false"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 15" enabled="false"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 15" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_15}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;15&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="965500965">&lt;sgn:Code&gt;15&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ФЛК 64" enabled="false"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 1" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 1" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_1}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;1&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-280209726">&lt;sgn:Code&gt;1&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 2" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 2" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_2}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;2&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-151127007">&lt;sgn:Code&gt;2&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 3" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 3" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_3}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;3&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-22044288">&lt;sgn:Code&gt;3&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 4" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 4" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_4}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;4&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="107038431">&lt;sgn:Code&gt;4&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 5" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 5" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_5}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;5&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="236121150">&lt;sgn:Code&gt;5&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 6" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 6" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_6}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;6&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="365203869">&lt;sgn:Code&gt;6&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 7" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 7" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_7}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;7&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="494286588">&lt;sgn:Code&gt;7&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 8" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 8" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_8}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;8&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="623369307">&lt;sgn:Code&gt;8&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 9" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 9" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_9}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;9&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="752452026">&lt;sgn:Code&gt;9&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 10" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 10" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_10}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;10&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="320087370">&lt;sgn:Code&gt;10&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 11" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 11" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_11}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;11&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="449170089">&lt;sgn:Code&gt;11&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 12" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 12" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_12}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;12&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="578252808">&lt;sgn:Code&gt;12&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 13" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 13" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_13}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;13&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="707335527">&lt;sgn:Code&gt;13&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 14" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 14" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_14}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;14&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="836418246">&lt;sgn:Code&gt;14&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 15" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 15" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_15}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;15&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="965500965">&lt;sgn:Code&gt;15&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 16" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 16" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_16}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;16&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1094583684">&lt;sgn:Code&gt;16&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 17" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 17" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_17}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;17&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1223666403">&lt;sgn:Code&gt;17&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 18" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 18" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_18}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;18&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1352749122">&lt;sgn:Code&gt;18&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 19" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 19" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_19}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;19&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1481831841">&lt;sgn:Code&gt;19&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 20" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 20" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_20}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;20&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="26684363">&lt;sgn:Code&gt;20&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 21" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 21" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_21}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;21&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="155767082">&lt;sgn:Code&gt;21&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 22" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 22" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_22}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;22&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="284849801">&lt;sgn:Code&gt;22&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 23" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 23" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_23}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;23&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="413932520">&lt;sgn:Code&gt;23&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 24" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 24" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_24}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;24&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="543015239">&lt;sgn:Code&gt;24&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 25" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 25" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_25}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;25&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="672097958">&lt;sgn:Code&gt;25&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 26" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 26" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_26}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;26&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="801180677">&lt;sgn:Code&gt;26&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 27" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 27" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_27}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;27&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="930263396">&lt;sgn:Code&gt;27&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 28" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 28" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_28}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;28&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1059346115">&lt;sgn:Code&gt;28&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 29" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 29" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_29}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;29&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1188428834">&lt;sgn:Code&gt;29&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 30" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 30" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_30}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;30&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-266718644">&lt;sgn:Code&gt;30&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 31" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 31" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_31}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;31&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-137635925">&lt;sgn:Code&gt;31&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 32" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 32" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_32}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;32&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-8553206">&lt;sgn:Code&gt;32&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 33" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 33" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_33}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;33&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="120529513">&lt;sgn:Code&gt;33&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 34" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 34" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_34}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;34&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="249612232">&lt;sgn:Code&gt;34&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 35" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 35" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_35}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;35&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="378694951">&lt;sgn:Code&gt;35&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 36" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 36" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_36}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;36&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="507777670">&lt;sgn:Code&gt;36&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 37" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 37" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_37}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;37&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="636860389">&lt;sgn:Code&gt;37&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 38" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 38" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_38}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;38&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="765943108">&lt;sgn:Code&gt;38&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 39" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 39" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_39}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;39&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="895025827">&lt;sgn:Code&gt;39&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 40" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 40" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_40}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;40&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-560121651">&lt;sgn:Code&gt;40&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 41" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 41" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_41}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;41&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-431038932">&lt;sgn:Code&gt;41&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 42" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 42" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_42}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;42&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-301956213">&lt;sgn:Code&gt;42&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 43" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 43" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_43}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;43&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-172873494">&lt;sgn:Code&gt;43&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 44" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 44" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_44}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;44&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-43790775">&lt;sgn:Code&gt;44&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 45" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 45" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_45}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;45&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="85291944">&lt;sgn:Code&gt;45&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 46" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 46" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_46}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;46&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="214374663">&lt;sgn:Code&gt;46&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 47" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 47" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_47}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;47&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="343457382">&lt;sgn:Code&gt;47&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 48" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 48" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_48}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;48&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="472540101">&lt;sgn:Code&gt;48&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 49" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 49" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_49}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;49&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="601622820">&lt;sgn:Code&gt;49&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 50" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 50" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_50}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;50&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-853524658">&lt;sgn:Code&gt;50&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 51" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 51" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_51}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;51&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-724441939">&lt;sgn:Code&gt;51&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 52" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 52" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_52}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;52&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-595359220">&lt;sgn:Code&gt;52&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 53" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 53" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_53}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;53&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-466276501">&lt;sgn:Code&gt;53&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 54" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 54" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_54}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;54&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-337193782">&lt;sgn:Code&gt;54&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 55" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 55" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_55}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;55&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-208111063">&lt;sgn:Code&gt;55&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 56" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 56" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_56}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;56&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-79028344">&lt;sgn:Code&gt;56&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 57" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 57" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_57}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;57&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="50054375">&lt;sgn:Code&gt;57&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 58" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 58" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_58}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;58&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="179137094">&lt;sgn:Code&gt;58&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 59" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 59" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_59}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;59&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="308219813">&lt;sgn:Code&gt;59&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 60" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 60" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_60}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;60&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1146927665">&lt;sgn:Code&gt;60&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 61" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 61" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_61}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;61&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1017844946">&lt;sgn:Code&gt;61&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 62" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 62" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_62}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;62&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-888762227">&lt;sgn:Code&gt;62&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 63" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 63" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_63}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;63&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-759679508">&lt;sgn:Code&gt;63&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qIN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Host Name" elementType="Argument">
                    <stringProp name="Argument.name">Host Name</stringProp>
                    <stringProp name="Argument.value">${hostName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Name" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Name</stringProp>
                    <stringProp name="Argument.value">${qmName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Channel" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                    <stringProp name="Argument.value">${qmChannel}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Queue Manager Port" elementType="Argument">
                    <stringProp name="Argument.name">Queue Manager Port</stringProp>
                    <stringProp name="Argument.value">${qmPort}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Target Queue" elementType="Argument">
                    <stringProp name="Argument.name">Target Queue</stringProp>
                    <stringProp name="Argument.value">${qOUT}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Wait Time" elementType="Argument">
                    <stringProp name="Argument.name">Wait Time</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Max Read" elementType="Argument">
                    <stringProp name="Argument.name">Max Read</stringProp>
                    <stringProp name="Argument.value">1000</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 64" enabled="true"/>
          <hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 64" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_64}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;64&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">600000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-630596789">&lt;sgn:Code&gt;64&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
        <stringProp name="ConstantTimer.delay">1000</stringProp>
      </ConstantTimer>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="Таблица результатов" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>false</time>
            <latency>false</latency>
            <timestamp>true</timestamp>
            <success>false</success>
            <label>false</label>
            <code>false</code>
            <message>true</message>
            <threadName>false</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Результаты транзакции" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <objProp>
          <value class="SampleSaveConfiguration">
            <time>false</time>
            <latency>false</latency>
            <timestamp>false</timestamp>
            <success>false</success>
            <label>false</label>
            <code>false</code>
            <message>false</message>
            <threadName>false</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
