<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.6" jmeter="2.11 r1554548">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Сценарий 3. Изменение сведений в Едином реестре (Процесс 27/003)" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Пользовательские переменные" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="projectPath" elementType="Argument">
            <stringProp name="Argument.name">projectPath</stringProp>
            <stringProp name="Argument.value">${__property(project.path)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Корневая директория jmeter</stringProp>
          </elementProp>
          <elementProp name="contextFactory" elementType="Argument">
            <stringProp name="Argument.name">contextFactory</stringProp>
            <stringProp name="Argument.value">com.sun.jndi.fscontext.RefFSContextFactory</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="provider" elementType="Argument">
            <stringProp name="Argument.name">provider</stringProp>
            <stringProp name="Argument.value">file:/${__property(project.path)}/bindings</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="connFactory" elementType="Argument">
            <stringProp name="Argument.name">connFactory</stringProp>
            <stringProp name="Argument.value">${__property(connection.factory)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="qIN" elementType="Argument">
            <stringProp name="Argument.name">qIN</stringProp>
            <stringProp name="Argument.value">${__property(queue.in)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Очередь входящих сообщений</stringProp>
          </elementProp>
          <elementProp name="qOUT" elementType="Argument">
            <stringProp name="Argument.name">qOUT</stringProp>
            <stringProp name="Argument.value">${__property(queue.out)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Очередь исходящих сообщений</stringProp>
          </elementProp>
          <elementProp name="hostName" elementType="Argument">
            <stringProp name="Argument.name">hostName</stringProp>
            <stringProp name="Argument.value">${__property(host.name)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Адрес хоста mq</stringProp>
          </elementProp>
          <elementProp name="qmChannel" elementType="Argument">
            <stringProp name="Argument.name">qmChannel</stringProp>
            <stringProp name="Argument.value">${__property(qm.channel)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Имя канала менеджера сообщений</stringProp>
          </elementProp>
          <elementProp name="qmPort" elementType="Argument">
            <stringProp name="Argument.name">qmPort</stringProp>
            <stringProp name="Argument.value">${__property(qm.port)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Порт менеджера сообщений</stringProp>
          </elementProp>
          <elementProp name="qmName" elementType="Argument">
            <stringProp name="Argument.name">qmName</stringProp>
            <stringProp name="Argument.value">${__property(qm.name)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Имя менеджера сообщений</stringProp>
          </elementProp>
          <elementProp name="testDataPath" elementType="Argument">
            <stringProp name="Argument.name">testDataPath</stringProp>
            <stringProp name="Argument.value">${__property(testdata.path)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Путь к директории тестовых данных (для логов)</stringProp>
          </elementProp>
          <elementProp name="header_action" elementType="Argument">
            <stringProp name="Argument.name">header_action</stringProp>
            <stringProp name="Argument.value">int://CP/P.MM.01/0.1/P.MM.01.PRC.002/P.MM.01.TRN.002/P.MM.01.MSG.003</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="header_to" elementType="Argument">
            <stringProp name="Argument.name">header_to</stringProp>
            <stringProp name="Argument.value">EAEU://EEC/CP/P.MM.01/P.ACT.001</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="header_reply_to" elementType="Argument">
            <stringProp name="Argument.name">header_reply_to</stringProp>
            <stringProp name="Argument.value">EAEU://BY/CP/P.MM.01/P.MM.01.ACT.001</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="testMessagePath" elementType="Argument">
            <stringProp name="Argument.name">testMessagePath</stringProp>
            <stringProp name="Argument.value">../../TestData/OP27/by/Messages/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Путь к директории с сообщениями</stringProp>
          </elementProp>
          <elementProp name="testScriptNumber" elementType="Argument">
            <stringProp name="Argument.name">testScriptNumber</stringProp>
            <stringProp name="Argument.value">003</stringProp>
            <stringProp name="Argument.desc">Номер сценария - должен совпадать с номером папки</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="processNumber" elementType="Argument">
            <stringProp name="Argument.name">processNumber</stringProp>
            <stringProp name="Argument.value">OP27</stringProp>
            <stringProp name="Argument.desc">Имя папки процесса</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
        <stringProp name="ConstantTimer.delay">1000</stringProp>
      </ConstantTimer>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Тест" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1412086094000</longProp>
        <longProp name="ThreadGroup.end_time">1410507146000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">1</stringProp>
        <stringProp name="ThreadGroup.delay">1</stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <BSFSampler guiclass="TestBeanGUI" testclass="BSFSampler" testname="Подготовка сообщений из директории" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">// Перебираем файлы xml из директории и заменяем в них uuid - вставляем в переменную с именем файла
// Для сообщений берется имя без расширения, для FLC - Обрезается все до FLC - для единообразия в ФЛК сценариях
path=&apos;${testMessagePath}&apos; + &apos;${testScriptNumber}&apos; 

new File(path).eachFile()
{
	if (it.name.startsWith(&apos;MSG&apos;))
	{
		log.info(&quot;Load file &quot; + it.name)
		fileContents = &quot;&quot;
		it.eachLine { line -&gt; fileContents = fileContents + line.replaceFirst(&apos;..__UUID}&apos;, (UUID.randomUUID().toString())) + &quot;\n&quot; }
		log.info(&quot;Create message &quot; + it.name.replaceFirst(/\S*FLC/,&apos;FLC&apos;).replaceFirst(/\S*SC/,&apos;SC&apos;).minus(&apos;.xml&apos;))
		vars.put (it.name.replaceFirst(/\S*FLC/,&apos;FLC&apos;).replaceFirst(/\S*SC/,&apos;SC&apos;).minus(&apos;.xml&apos;), fileContents)	
			if (it.name == &apos;MSG_&apos; + &apos;${testScriptNumber}&apos; + &apos;.xml&apos;)
			{
				log.info(&quot;Create message &quot; + &quot;mainMessage&quot;)
				vars.put (&quot;mainMessage&quot;, fileContents)	
			}	
	}
	// if (it.name == (&apos;MSG_&apos; + ${testScriptNumber} + &apos;.xml&apos;))

}

</stringProp>
        </BSFSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Добавление сведений(предусловие)" enabled="true"/>
        <hashTree>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Host Name" elementType="Argument">
                  <stringProp name="Argument.name">Host Name</stringProp>
                  <stringProp name="Argument.value">${hostName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Queue Manager Name" elementType="Argument">
                  <stringProp name="Argument.name">Queue Manager Name</stringProp>
                  <stringProp name="Argument.value">${qmName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Queue Manager Channel" elementType="Argument">
                  <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                  <stringProp name="Argument.value">${qmChannel}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Queue Manager Port" elementType="Argument">
                  <stringProp name="Argument.name">Queue Manager Port</stringProp>
                  <stringProp name="Argument.value">${qmPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Target Queue" elementType="Argument">
                  <stringProp name="Argument.name">Target Queue</stringProp>
                  <stringProp name="Argument.value">${qOUT}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Wait Time" elementType="Argument">
                  <stringProp name="Argument.name">Wait Time</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Max Read" elementType="Argument">
                  <stringProp name="Argument.name">Max Read</stringProp>
                  <stringProp name="Argument.value">1000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
          </JavaSampler>
          <hashTree/>
          <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Добавление сведений" enabled="true">
            <stringProp name="jms.jndi_properties">false</stringProp>
            <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
            <stringProp name="jms.provider_url">${provider}</stringProp>
            <stringProp name="jms.connection_factory">${connFactory}</stringProp>
            <stringProp name="jms.topic">${qIN}</stringProp>
            <stringProp name="jms.security_principle"></stringProp>
            <stringProp name="jms.security_credentials"></stringProp>
            <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;int://CP/P.MM.01/0.1/P.MM.01.PRC.001/P.MM.01.TRN.001/P.MM.01.MSG.002&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${MSG_002}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="jms.input_file">D:\Work\CitTest\CitTest\apache-jmeter(BY)\bin\examples\1.xml</stringProp>
            <stringProp name="jms.random_path"></stringProp>
            <stringProp name="jms.config_choice">jms_use_text</stringProp>
            <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
            <stringProp name="jms.iterations">1</stringProp>
            <boolProp name="jms.authenticate">false</boolProp>
            <elementProp name="jms.jmsProperties" elementType="JMSProperties">
              <collectionProp name="JMSProperties.properties"/>
            </elementProp>
          </PublisherSampler>
          <hashTree/>
          <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получение сообщения о принятии в работу" enabled="true">
            <stringProp name="jms.jndi_properties">false</stringProp>
            <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
            <stringProp name="jms.provider_url">${provider}</stringProp>
            <stringProp name="jms.connection_factory">${connFactory}</stringProp>
            <stringProp name="jms.topic">${qOUT}</stringProp>
            <stringProp name="jms.security_principle"></stringProp>
            <stringProp name="jms.security_credentials"></stringProp>
            <boolProp name="jms.authenticate">false</boolProp>
            <stringProp name="jms.iterations">1</stringProp>
            <stringProp name="jms.read_response">true</stringProp>
            <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
            <stringProp name="jms.timeout">60000</stringProp>
            <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
          </ru.croc.jmeter.SubscriberSamplerAdopted>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1132320954">P.MSG.PRS&lt;/wsa:Action&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получение сообщения об успешном изменении реестра" enabled="true">
            <stringProp name="jms.jndi_properties">false</stringProp>
            <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
            <stringProp name="jms.provider_url">${provider}</stringProp>
            <stringProp name="jms.connection_factory">${connFactory}</stringProp>
            <stringProp name="jms.topic">${qOUT}</stringProp>
            <stringProp name="jms.security_principle"></stringProp>
            <stringProp name="jms.security_credentials"></stringProp>
            <boolProp name="jms.authenticate">false</boolProp>
            <stringProp name="jms.iterations">1</stringProp>
            <stringProp name="jms.read_response">true</stringProp>
            <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
            <stringProp name="jms.timeout">60000</stringProp>
            <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
          </ru.croc.jmeter.SubscriberSamplerAdopted>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2086481174">&lt;csdo:ProcessingResultCode&gt;3&lt;/csdo:ProcessingResultCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Пауза" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">5000</stringProp>
          </TestAction>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Структурный контроль" enabled="true"/>
        <hashTree>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Host Name" elementType="Argument">
                  <stringProp name="Argument.name">Host Name</stringProp>
                  <stringProp name="Argument.value">${hostName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Queue Manager Name" elementType="Argument">
                  <stringProp name="Argument.name">Queue Manager Name</stringProp>
                  <stringProp name="Argument.value">${qmName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Queue Manager Channel" elementType="Argument">
                  <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                  <stringProp name="Argument.value">${qmChannel}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Queue Manager Port" elementType="Argument">
                  <stringProp name="Argument.name">Queue Manager Port</stringProp>
                  <stringProp name="Argument.value">${qmPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Target Queue" elementType="Argument">
                  <stringProp name="Argument.name">Target Queue</stringProp>
                  <stringProp name="Argument.value">${qOUT}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Wait Time" elementType="Argument">
                  <stringProp name="Argument.name">Wait Time</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Max Read" elementType="Argument">
                  <stringProp name="Argument.name">Max Read</stringProp>
                  <stringProp name="Argument.value">1000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
          </JavaSampler>
          <hashTree/>
          <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Структурный контроль" enabled="true">
            <stringProp name="jms.jndi_properties">false</stringProp>
            <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
            <stringProp name="jms.provider_url">${provider}</stringProp>
            <stringProp name="jms.connection_factory">${connFactory}</stringProp>
            <stringProp name="jms.topic">${qIN}</stringProp>
            <stringProp name="jms.security_principle"></stringProp>
            <stringProp name="jms.security_credentials"></stringProp>
            <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
	&lt;soap:Body&gt;
	${SC}
	&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="jms.input_file"></stringProp>
            <stringProp name="jms.random_path"></stringProp>
            <stringProp name="jms.config_choice">jms_use_text</stringProp>
            <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
            <stringProp name="jms.iterations">1</stringProp>
            <boolProp name="jms.authenticate">false</boolProp>
            <elementProp name="jms.jmsProperties" elementType="JMSProperties">
              <collectionProp name="JMSProperties.properties"/>
            </elementProp>
          </PublisherSampler>
          <hashTree/>
          <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получение сообщения с кодом ошибки" enabled="true">
            <stringProp name="jms.jndi_properties">false</stringProp>
            <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
            <stringProp name="jms.provider_url">${provider}</stringProp>
            <stringProp name="jms.connection_factory">${connFactory}</stringProp>
            <stringProp name="jms.topic">${qOUT}</stringProp>
            <stringProp name="jms.security_principle"></stringProp>
            <stringProp name="jms.security_credentials"></stringProp>
            <boolProp name="jms.authenticate">false</boolProp>
            <stringProp name="jms.iterations">1</stringProp>
            <stringProp name="jms.read_response">true</stringProp>
            <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
            <stringProp name="jms.timeout">60000</stringProp>
            <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
          </ru.croc.jmeter.SubscriberSamplerAdopted>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1892713382"> &lt;sgn:Code&gt;Common:DataError&lt;/sgn:Code&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-255925546"> &lt;sgn:Description&gt;Структура электронного документа должна соответствовать структуре, приведенной в реестре СЭД.&lt;/sgn:Description&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 1" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
              <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
              <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="Host Name" elementType="Argument">
                      <stringProp name="Argument.name">Host Name</stringProp>
                      <stringProp name="Argument.value">${hostName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Name" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Name</stringProp>
                      <stringProp name="Argument.value">${qmName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Channel" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                      <stringProp name="Argument.value">${qmChannel}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Port" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Port</stringProp>
                      <stringProp name="Argument.value">${qmPort}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Target Queue" elementType="Argument">
                      <stringProp name="Argument.name">Target Queue</stringProp>
                      <stringProp name="Argument.value">${qOUT}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Wait Time" elementType="Argument">
                      <stringProp name="Argument.name">Wait Time</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Max Read" elementType="Argument">
                      <stringProp name="Argument.name">Max Read</stringProp>
                      <stringProp name="Argument.value">1000</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
              </JavaSampler>
              <hashTree/>
            </hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 1" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_1}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;1&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1070078451">1&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 2" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
              <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
              <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="Host Name" elementType="Argument">
                      <stringProp name="Argument.name">Host Name</stringProp>
                      <stringProp name="Argument.value">${hostName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Name" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Name</stringProp>
                      <stringProp name="Argument.value">${qmName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Channel" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                      <stringProp name="Argument.value">${qmChannel}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Port" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Port</stringProp>
                      <stringProp name="Argument.value">${qmPort}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Target Queue" elementType="Argument">
                      <stringProp name="Argument.name">Target Queue</stringProp>
                      <stringProp name="Argument.value">${qOUT}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Wait Time" elementType="Argument">
                      <stringProp name="Argument.name">Wait Time</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Max Read" elementType="Argument">
                      <stringProp name="Argument.name">Max Read</stringProp>
                      <stringProp name="Argument.value">1000</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
              </JavaSampler>
              <hashTree/>
            </hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 2" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_2}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;2&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-940995732">2&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 3" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
              <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
              <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="Host Name" elementType="Argument">
                      <stringProp name="Argument.name">Host Name</stringProp>
                      <stringProp name="Argument.value">${hostName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Name" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Name</stringProp>
                      <stringProp name="Argument.value">${qmName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Channel" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                      <stringProp name="Argument.value">${qmChannel}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Port" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Port</stringProp>
                      <stringProp name="Argument.value">${qmPort}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Target Queue" elementType="Argument">
                      <stringProp name="Argument.name">Target Queue</stringProp>
                      <stringProp name="Argument.value">${qOUT}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Wait Time" elementType="Argument">
                      <stringProp name="Argument.name">Wait Time</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Max Read" elementType="Argument">
                      <stringProp name="Argument.name">Max Read</stringProp>
                      <stringProp name="Argument.value">1000</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
              </JavaSampler>
              <hashTree/>
            </hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 3" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_3}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;3&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-811913013">3&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 4" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
              <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
              <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="Host Name" elementType="Argument">
                      <stringProp name="Argument.name">Host Name</stringProp>
                      <stringProp name="Argument.value">${hostName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Name" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Name</stringProp>
                      <stringProp name="Argument.value">${qmName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Channel" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                      <stringProp name="Argument.value">${qmChannel}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Port" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Port</stringProp>
                      <stringProp name="Argument.value">${qmPort}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Target Queue" elementType="Argument">
                      <stringProp name="Argument.name">Target Queue</stringProp>
                      <stringProp name="Argument.value">${qOUT}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Wait Time" elementType="Argument">
                      <stringProp name="Argument.name">Wait Time</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Max Read" elementType="Argument">
                      <stringProp name="Argument.name">Max Read</stringProp>
                      <stringProp name="Argument.value">1000</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
              </JavaSampler>
              <hashTree/>
            </hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 4" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_4}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;4&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-682830294">4&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 1" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
              <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
              <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="Host Name" elementType="Argument">
                      <stringProp name="Argument.name">Host Name</stringProp>
                      <stringProp name="Argument.value">${hostName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Name" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Name</stringProp>
                      <stringProp name="Argument.value">${qmName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Channel" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                      <stringProp name="Argument.value">${qmChannel}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Port" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Port</stringProp>
                      <stringProp name="Argument.value">${qmPort}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Target Queue" elementType="Argument">
                      <stringProp name="Argument.name">Target Queue</stringProp>
                      <stringProp name="Argument.value">${qOUT}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Wait Time" elementType="Argument">
                      <stringProp name="Argument.name">Wait Time</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Max Read" elementType="Argument">
                      <stringProp name="Argument.name">Max Read</stringProp>
                      <stringProp name="Argument.value">1000</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
              </JavaSampler>
              <hashTree/>
            </hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 1" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_1}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED1&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1070078451">1&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 2" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
              <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
              <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="Host Name" elementType="Argument">
                      <stringProp name="Argument.name">Host Name</stringProp>
                      <stringProp name="Argument.value">${hostName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Name" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Name</stringProp>
                      <stringProp name="Argument.value">${qmName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Channel" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                      <stringProp name="Argument.value">${qmChannel}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Port" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Port</stringProp>
                      <stringProp name="Argument.value">${qmPort}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Target Queue" elementType="Argument">
                      <stringProp name="Argument.name">Target Queue</stringProp>
                      <stringProp name="Argument.value">${qOUT}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Wait Time" elementType="Argument">
                      <stringProp name="Argument.name">Wait Time</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Max Read" elementType="Argument">
                      <stringProp name="Argument.name">Max Read</stringProp>
                      <stringProp name="Argument.value">1000</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
              </JavaSampler>
              <hashTree/>
            </hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 2" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_2}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED2&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-940995732">2&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 3" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
              <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
              <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="Host Name" elementType="Argument">
                      <stringProp name="Argument.name">Host Name</stringProp>
                      <stringProp name="Argument.value">${hostName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Name" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Name</stringProp>
                      <stringProp name="Argument.value">${qmName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Channel" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                      <stringProp name="Argument.value">${qmChannel}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Port" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Port</stringProp>
                      <stringProp name="Argument.value">${qmPort}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Target Queue" elementType="Argument">
                      <stringProp name="Argument.name">Target Queue</stringProp>
                      <stringProp name="Argument.value">${qOUT}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Wait Time" elementType="Argument">
                      <stringProp name="Argument.name">Wait Time</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Max Read" elementType="Argument">
                      <stringProp name="Argument.name">Max Read</stringProp>
                      <stringProp name="Argument.value">1000</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
              </JavaSampler>
              <hashTree/>
            </hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 3" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_3}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED3&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-811913013">3&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 4" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
              <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
              <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="Host Name" elementType="Argument">
                      <stringProp name="Argument.name">Host Name</stringProp>
                      <stringProp name="Argument.value">${hostName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Name" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Name</stringProp>
                      <stringProp name="Argument.value">${qmName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Channel" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                      <stringProp name="Argument.value">${qmChannel}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Port" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Port</stringProp>
                      <stringProp name="Argument.value">${qmPort}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Target Queue" elementType="Argument">
                      <stringProp name="Argument.name">Target Queue</stringProp>
                      <stringProp name="Argument.value">${qOUT}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Wait Time" elementType="Argument">
                      <stringProp name="Argument.name">Wait Time</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Max Read" elementType="Argument">
                      <stringProp name="Argument.name">Max Read</stringProp>
                      <stringProp name="Argument.value">1000</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
              </JavaSampler>
              <hashTree/>
            </hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 4" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_4}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED4&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-682830294">4&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 5" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
              <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
              <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="Host Name" elementType="Argument">
                      <stringProp name="Argument.name">Host Name</stringProp>
                      <stringProp name="Argument.value">${hostName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Name" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Name</stringProp>
                      <stringProp name="Argument.value">${qmName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Channel" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                      <stringProp name="Argument.value">${qmChannel}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Port" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Port</stringProp>
                      <stringProp name="Argument.value">${qmPort}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Target Queue" elementType="Argument">
                      <stringProp name="Argument.name">Target Queue</stringProp>
                      <stringProp name="Argument.value">${qOUT}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Wait Time" elementType="Argument">
                      <stringProp name="Argument.name">Wait Time</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Max Read" elementType="Argument">
                      <stringProp name="Argument.name">Max Read</stringProp>
                      <stringProp name="Argument.value">1000</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
              </JavaSampler>
              <hashTree/>
            </hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 5" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_5}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED5&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-553747575">5&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 6" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
              <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
              <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="Host Name" elementType="Argument">
                      <stringProp name="Argument.name">Host Name</stringProp>
                      <stringProp name="Argument.value">${hostName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Name" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Name</stringProp>
                      <stringProp name="Argument.value">${qmName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Channel" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                      <stringProp name="Argument.value">${qmChannel}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Port" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Port</stringProp>
                      <stringProp name="Argument.value">${qmPort}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Target Queue" elementType="Argument">
                      <stringProp name="Argument.name">Target Queue</stringProp>
                      <stringProp name="Argument.value">${qOUT}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Wait Time" elementType="Argument">
                      <stringProp name="Argument.name">Wait Time</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Max Read" elementType="Argument">
                      <stringProp name="Argument.name">Max Read</stringProp>
                      <stringProp name="Argument.value">1000</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
              </JavaSampler>
              <hashTree/>
            </hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 6" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_6}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED6&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-424664856">6&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 7" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
              <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
              <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="Host Name" elementType="Argument">
                      <stringProp name="Argument.name">Host Name</stringProp>
                      <stringProp name="Argument.value">${hostName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Name" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Name</stringProp>
                      <stringProp name="Argument.value">${qmName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Channel" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                      <stringProp name="Argument.value">${qmChannel}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Port" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Port</stringProp>
                      <stringProp name="Argument.value">${qmPort}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Target Queue" elementType="Argument">
                      <stringProp name="Argument.name">Target Queue</stringProp>
                      <stringProp name="Argument.value">${qOUT}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Wait Time" elementType="Argument">
                      <stringProp name="Argument.name">Wait Time</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Max Read" elementType="Argument">
                      <stringProp name="Argument.name">Max Read</stringProp>
                      <stringProp name="Argument.value">1000</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
              </JavaSampler>
              <hashTree/>
            </hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 7" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_7}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED7&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-295582137">7&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 8" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
              <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
              <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="Host Name" elementType="Argument">
                      <stringProp name="Argument.name">Host Name</stringProp>
                      <stringProp name="Argument.value">${hostName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Name" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Name</stringProp>
                      <stringProp name="Argument.value">${qmName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Channel" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                      <stringProp name="Argument.value">${qmChannel}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Port" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Port</stringProp>
                      <stringProp name="Argument.value">${qmPort}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Target Queue" elementType="Argument">
                      <stringProp name="Argument.name">Target Queue</stringProp>
                      <stringProp name="Argument.value">${qOUT}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Wait Time" elementType="Argument">
                      <stringProp name="Argument.name">Wait Time</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Max Read" elementType="Argument">
                      <stringProp name="Argument.name">Max Read</stringProp>
                      <stringProp name="Argument.value">1000</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
              </JavaSampler>
              <hashTree/>
            </hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 8" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_8}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED8&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-166499418">8&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 9" enabled="true"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
              <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
              <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="Host Name" elementType="Argument">
                      <stringProp name="Argument.name">Host Name</stringProp>
                      <stringProp name="Argument.value">${hostName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Name" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Name</stringProp>
                      <stringProp name="Argument.value">${qmName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Channel" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                      <stringProp name="Argument.value">${qmChannel}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Port" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Port</stringProp>
                      <stringProp name="Argument.value">${qmPort}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Target Queue" elementType="Argument">
                      <stringProp name="Argument.name">Target Queue</stringProp>
                      <stringProp name="Argument.value">${qOUT}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Wait Time" elementType="Argument">
                      <stringProp name="Argument.name">Wait Time</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Max Read" elementType="Argument">
                      <stringProp name="Argument.name">Max Read</stringProp>
                      <stringProp name="Argument.value">1000</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
              </JavaSampler>
              <hashTree/>
            </hashTree>
            <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 9" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qIN}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_9}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
              <stringProp name="jms.input_file"></stringProp>
              <stringProp name="jms.random_path"></stringProp>
              <stringProp name="jms.config_choice">jms_use_text</stringProp>
              <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
              <stringProp name="jms.iterations">1</stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                <collectionProp name="JMSProperties.properties"/>
              </elementProp>
            </PublisherSampler>
            <hashTree/>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED9&quot;" enabled="true">
              <stringProp name="jms.jndi_properties">false</stringProp>
              <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
              <stringProp name="jms.provider_url">${provider}</stringProp>
              <stringProp name="jms.connection_factory">${connFactory}</stringProp>
              <stringProp name="jms.topic">${qOUT}</stringProp>
              <stringProp name="jms.security_principle"></stringProp>
              <stringProp name="jms.security_credentials"></stringProp>
              <boolProp name="jms.authenticate">false</boolProp>
              <stringProp name="jms.iterations">1</stringProp>
              <stringProp name="jms.read_response">true</stringProp>
              <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
              <stringProp name="jms.timeout">30000</stringProp>
              <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
            </ru.croc.jmeter.SubscriberSamplerAdopted>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-37416699">9&lt;/sgn:Code&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Корректное сообщение" enabled="true"/>
        <hashTree>
          <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
            <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="Host Name" elementType="Argument">
                  <stringProp name="Argument.name">Host Name</stringProp>
                  <stringProp name="Argument.value">${hostName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Queue Manager Name" elementType="Argument">
                  <stringProp name="Argument.name">Queue Manager Name</stringProp>
                  <stringProp name="Argument.value">${qmName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Queue Manager Channel" elementType="Argument">
                  <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                  <stringProp name="Argument.value">${qmChannel}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Queue Manager Port" elementType="Argument">
                  <stringProp name="Argument.name">Queue Manager Port</stringProp>
                  <stringProp name="Argument.value">${qmPort}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Target Queue" elementType="Argument">
                  <stringProp name="Argument.name">Target Queue</stringProp>
                  <stringProp name="Argument.value">${qOUT}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Wait Time" elementType="Argument">
                  <stringProp name="Argument.name">Wait Time</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Max Read" elementType="Argument">
                  <stringProp name="Argument.name">Max Read</stringProp>
                  <stringProp name="Argument.value">1000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
          </JavaSampler>
          <hashTree/>
          <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Корректное сообщение" enabled="true">
            <stringProp name="jms.jndi_properties">false</stringProp>
            <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
            <stringProp name="jms.provider_url">${provider}</stringProp>
            <stringProp name="jms.connection_factory">${connFactory}</stringProp>
            <stringProp name="jms.topic">${qIN}</stringProp>
            <stringProp name="jms.security_principle"></stringProp>
            <stringProp name="jms.security_credentials"></stringProp>
            <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${mainMessage}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
            <stringProp name="jms.input_file">D:\Work\CitTest\CitTest\apache-jmeter(BY)\bin\examples\1.xml</stringProp>
            <stringProp name="jms.random_path"></stringProp>
            <stringProp name="jms.config_choice">jms_use_text</stringProp>
            <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
            <stringProp name="jms.iterations">1</stringProp>
            <boolProp name="jms.authenticate">false</boolProp>
            <elementProp name="jms.jmsProperties" elementType="JMSProperties">
              <collectionProp name="JMSProperties.properties"/>
            </elementProp>
          </PublisherSampler>
          <hashTree/>
          <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получение сообщения о принятии в работу" enabled="true">
            <stringProp name="jms.jndi_properties">false</stringProp>
            <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
            <stringProp name="jms.provider_url">${provider}</stringProp>
            <stringProp name="jms.connection_factory">${connFactory}</stringProp>
            <stringProp name="jms.topic">${qOUT}</stringProp>
            <stringProp name="jms.security_principle"></stringProp>
            <stringProp name="jms.security_credentials"></stringProp>
            <boolProp name="jms.authenticate">false</boolProp>
            <stringProp name="jms.iterations">1</stringProp>
            <stringProp name="jms.read_response">true</stringProp>
            <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
            <stringProp name="jms.timeout">60000</stringProp>
            <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
          </ru.croc.jmeter.SubscriberSamplerAdopted>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings"/>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получение сообщения об успешном изменении реестра" enabled="true">
            <stringProp name="jms.jndi_properties">false</stringProp>
            <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
            <stringProp name="jms.provider_url">${provider}</stringProp>
            <stringProp name="jms.connection_factory">${connFactory}</stringProp>
            <stringProp name="jms.topic">${qOUT}</stringProp>
            <stringProp name="jms.security_principle"></stringProp>
            <stringProp name="jms.security_credentials"></stringProp>
            <boolProp name="jms.authenticate">false</boolProp>
            <stringProp name="jms.iterations">1</stringProp>
            <stringProp name="jms.read_response">true</stringProp>
            <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
            <stringProp name="jms.timeout">60000</stringProp>
            <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
          </ru.croc.jmeter.SubscriberSamplerAdopted>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2086481174">&lt;csdo:ProcessingResultCode&gt;3&lt;/csdo:ProcessingResultCode&gt;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Temp" enabled="false"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Добавление сведений(предусловие)" enabled="false"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Очистка очередей OP.IN и OP.OUT" enabled="true"/>
            <hashTree>
              <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди входящих" enabled="false">
                <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="Host Name" elementType="Argument">
                      <stringProp name="Argument.name">Host Name</stringProp>
                      <stringProp name="Argument.value">${hostName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Name" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Name</stringProp>
                      <stringProp name="Argument.value">${qmName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Channel" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                      <stringProp name="Argument.value">${qmChannel}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Port" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Port</stringProp>
                      <stringProp name="Argument.value">${qmPort}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Target Queue" elementType="Argument">
                      <stringProp name="Argument.name">Target Queue</stringProp>
                      <stringProp name="Argument.value">${qIN}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Wait Time" elementType="Argument">
                      <stringProp name="Argument.name">Wait Time</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Max Read" elementType="Argument">
                      <stringProp name="Argument.name">Max Read</stringProp>
                      <stringProp name="Argument.value">1000</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
              </JavaSampler>
              <hashTree/>
              <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="Host Name" elementType="Argument">
                      <stringProp name="Argument.name">Host Name</stringProp>
                      <stringProp name="Argument.value">${hostName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Name" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Name</stringProp>
                      <stringProp name="Argument.value">${qmName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Channel" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                      <stringProp name="Argument.value">${qmChannel}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Queue Manager Port" elementType="Argument">
                      <stringProp name="Argument.name">Queue Manager Port</stringProp>
                      <stringProp name="Argument.value">${qmPort}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Target Queue" elementType="Argument">
                      <stringProp name="Argument.name">Target Queue</stringProp>
                      <stringProp name="Argument.value">${qOUT}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Wait Time" elementType="Argument">
                      <stringProp name="Argument.name">Wait Time</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="Max Read" elementType="Argument">
                      <stringProp name="Argument.name">Max Read</stringProp>
                      <stringProp name="Argument.value">1000</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
              </JavaSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Добавление сведений" enabled="true"/>
            <hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Добавление сведений" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;int://CP/P.MM.02/0.1/P.MM.02.PRC.001/P.MM.02.TRN.002/P.MM.02.MSG.002&lt;/wsa:Action&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${MSG_002}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file">D:\Work\CitTest\CitTest\apache-jmeter(BY)\bin\examples\1.xml</stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получение сообщения о принятии в работу" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">60000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1132320954">P.MSG.PRS&lt;/wsa:Action&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получение сообщения об успешном изменении реестра" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">60000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2086481174">&lt;csdo:ProcessingResultCode&gt;3&lt;/csdo:ProcessingResultCode&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Пауза" enabled="true">
              <intProp name="ActionProcessor.action">1</intProp>
              <intProp name="ActionProcessor.target">0</intProp>
              <stringProp name="ActionProcessor.duration">5000</stringProp>
            </TestAction>
            <hashTree/>
          </hashTree>
          <kg.apc.jmeter.reporters.FlexibleFileWriter guiclass="kg.apc.jmeter.reporters.FlexibleFileWriterGui" testclass="kg.apc.jmeter.reporters.FlexibleFileWriter" testname="Запись в лог" enabled="false">
            <stringProp name="filename">..\..\TestData\\${processNumber}\by\Results\log_${testScriptNumber}_${__BeanShell(new java.text.SimpleDateFormat(&quot;yyyy.MM.dd_HH`mm``ss.SSS&quot;).format(new Date()))}.log</stringProp>
            <stringProp name="columns">${__BeanShell(new java.text.SimpleDateFormat(&quot;yyyy.MM.dd HH:mm:ss.SSS&quot;).format(new Date()))}|\t|endTime|\t|isSuccsessful|\t|responseCode|\t|sampleLabel|\r\n</stringProp>
            <boolProp name="overwrite">false</boolProp>
            <stringProp name="header"></stringProp>
            <stringProp name="footer"></stringProp>
          </kg.apc.jmeter.reporters.FlexibleFileWriter>
          <hashTree/>
          <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Запись ответов в файл" enabled="false">
            <stringProp name="FileSaver.filename">..\..\TestData\\${processNumber}\by\Results\response_${testScriptNumber}__${__BeanShell(new java.text.SimpleDateFormat(&quot;yyyy.MM.dd_HH`mm``ss.SSS&quot;).format(new Date()))}_${__javaScript(new Date().getTime();)}.response</stringProp>
            <boolProp name="FileSaver.errorsonly">true</boolProp>
            <boolProp name="FileSaver.skipautonumber">true</boolProp>
            <boolProp name="FileSaver.skipsuffix">true</boolProp>
            <boolProp name="FileSaver.successonly">false</boolProp>
          </ResultSaver>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED _32" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 1" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 1" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_1}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED1&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1070078451">1&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 2" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 2" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_2}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED2&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-940995732">2&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 3" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 3" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_3}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED3&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-811913013">3&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 4" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 4" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_4}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED4&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-682830294">4&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 5" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 5" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_5}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED5&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-553747575">5&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 6" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 6" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_6}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED6&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-424664856">6&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 7" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 7" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_7}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED7&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-295582137">7&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 8" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 8" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_8}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED8&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-166499418">8&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 9" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 9" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_9}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED9&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-37416699">9&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 10" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 10" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_10}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED10&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1603960671">10&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 11" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 11" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_11}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED11&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1733043390">11&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 12" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 12" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_12}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED12&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1862126109">12&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 13" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 13" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_13}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED13&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1991208828">13&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 14" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 14" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_14}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED14&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2120291547">14&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 15" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 15" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_15}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED15&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2045593030">15&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 16" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 16" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_16}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED16&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1916510311">16&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 17" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 17" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_17}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED17&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1787427592">17&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 18" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 18" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_18}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED18&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1658344873">18&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 19" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 19" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_19}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED19&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1529262154">19&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 20" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 20" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_20}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED20&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1310557664">20&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 21" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 21" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_21}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED21&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1439640383">21&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 22" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 22" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_22}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED22&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1568723102">22&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 23" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 23" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_23}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED23&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1697805821">23&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 24" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 24" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_24}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED24&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1826888540">24&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 25" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 25" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_25}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED25&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1955971259">25&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 26" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 26" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_26}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED26&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2085053978">26&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 27" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 27" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_27}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED27&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2080830599">27&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 28" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 28" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_28}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED28&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1951747880">28&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 29" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 29" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_29}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED29&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1822665161">29&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 30" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 30" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_30}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED30&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1017154657">30&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 31" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 31" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_31}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED31&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1146237376">31&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК FED 32" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК FED 32" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_FED_32}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;FED32&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1275320095">32&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК_32" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 1" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 1" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_1}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;1&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1070078451">1&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 2" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 2" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_2}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;2&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-940995732">2&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 3" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 3" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_3}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;3&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-811913013">3&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 4" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 4" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_4}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;4&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-682830294">4&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 5" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 5" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_5}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;5&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-553747575">5&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 6" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 6" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_6}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;6&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-424664856">6&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 7" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 7" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_7}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;7&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-295582137">7&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 8" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 8" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_8}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;8&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-166499418">8&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 9" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 9" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_9}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;9&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-37416699">9&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 10" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 10" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_10}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;10&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1603960671">10&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 11" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 11" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_11}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;11&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1733043390">11&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 12" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 12" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_12}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;12&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1862126109">12&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 13" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 13" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_13}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;13&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1991208828">13&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 14" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 14" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_14}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;14&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2120291547">14&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 15" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 15" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_15}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;15&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2045593030">15&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 16" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 16" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_16}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;16&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1916510311">16&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 17" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 17" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_17}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;17&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1787427592">17&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 18" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 18" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_18}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;18&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1658344873">18&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 19" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 19" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_19}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;19&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1529262154">19&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 20" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 20" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_20}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;20&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1310557664">20&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 21" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 21" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_21}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;21&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1439640383">21&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 22" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 22" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_22}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;22&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1568723102">22&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 23" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 23" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_23}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;23&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1697805821">23&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 24" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 24" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_24}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;24&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1826888540">24&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 25" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 25" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_25}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;25&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1955971259">25&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 26" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 26" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_26}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;26&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2085053978">26&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 27" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 27" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_27}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;27&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2080830599">27&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 28" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 28" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_28}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;28&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1951747880">28&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 29" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 29" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_29}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;29&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1822665161">29&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 30" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 30" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_30}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;30&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1017154657">30&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 31" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 31" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_31}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;31&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1146237376">31&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Проверка ФЛК 32" enabled="true"/>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Очистка очередей если предыдущий тест провален" enabled="true">
                <stringProp name="TestPlan.comments">Очистка очередей в случае ошибки</stringProp>
                <stringProp name="IfController.condition">!${JMeterThread.last_sample_ok} </stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Очистка очереди исходящих" enabled="true">
                  <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="Host Name" elementType="Argument">
                        <stringProp name="Argument.name">Host Name</stringProp>
                        <stringProp name="Argument.value">${hostName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Name" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Name</stringProp>
                        <stringProp name="Argument.value">${qmName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Channel" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Channel</stringProp>
                        <stringProp name="Argument.value">${qmChannel}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Queue Manager Port" elementType="Argument">
                        <stringProp name="Argument.name">Queue Manager Port</stringProp>
                        <stringProp name="Argument.value">${qmPort}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Target Queue" elementType="Argument">
                        <stringProp name="Argument.name">Target Queue</stringProp>
                        <stringProp name="Argument.value">${qOUT}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Wait Time" elementType="Argument">
                        <stringProp name="Argument.name">Wait Time</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                      <elementProp name="Max Read" elementType="Argument">
                        <stringProp name="Argument.name">Max Read</stringProp>
                        <stringProp name="Argument.value">1000</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="classname">ru.croc.jmeter.JavaRequestMQCleaner</stringProp>
                </JavaSampler>
                <hashTree/>
              </hashTree>
              <PublisherSampler guiclass="JMSPublisherGui" testclass="PublisherSampler" testname="Проверка ФЛК 32" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qIN}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <stringProp name="jms.text_message">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;soap:Envelope xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:int=&quot;urn:EEC:Interaction:v1.0&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;&gt;
    &lt;soap:Header&gt;
      &lt;wsa:MessageID&gt;urn:uuid:${__UUID}&lt;/wsa:MessageID&gt;
      &lt;wsa:To&gt;${header_to}&lt;/wsa:To&gt;
      &lt;wsa:ReplyTo&gt;
        &lt;wsa:Address&gt;${header_reply_to}&lt;/wsa:Address&gt;
      &lt;/wsa:ReplyTo&gt;
      &lt;wsa:Action&gt;${header_action}&lt;/wsa:Action&gt;
      &lt;int:ConversationID&gt;urn:uuid:${__UUID}&lt;/int:ConversationID&gt;
      &lt;int:ProcedureID&gt;urn:uuid:${__UUID}&lt;/int:ProcedureID&gt;
    &lt;/soap:Header&gt;
&lt;soap:Body&gt;${FLC_32}&lt;/soap:Body&gt;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="jms.input_file"></stringProp>
                <stringProp name="jms.random_path"></stringProp>
                <stringProp name="jms.config_choice">jms_use_text</stringProp>
                <stringProp name="jms.config_msg_type">jms_text_message</stringProp>
                <stringProp name="jms.iterations">1</stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <elementProp name="jms.jmsProperties" elementType="JMSProperties">
                  <collectionProp name="JMSProperties.properties"/>
                </elementProp>
              </PublisherSampler>
              <hashTree/>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: уведомление о доставке" enabled="false">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-943679934"> &lt;sgn:DeliveryReceipt xmlns:sgn=&quot;urn:EEC:signal:v1.0&quot;&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ru.croc.jmeter.SubscriberSamplerAdopted guiclass="ru.croc.jmeter.JMSSubscriberGuiAdopted" testclass="ru.croc.jmeter.SubscriberSamplerAdopted" testname="Получено: сообщения с кодом ошибки &quot;32&quot;" enabled="true">
                <stringProp name="jms.jndi_properties">false</stringProp>
                <stringProp name="jms.initial_context_factory">${contextFactory}</stringProp>
                <stringProp name="jms.provider_url">${provider}</stringProp>
                <stringProp name="jms.connection_factory">${connFactory}</stringProp>
                <stringProp name="jms.topic">${qOUT}</stringProp>
                <stringProp name="jms.security_principle"></stringProp>
                <stringProp name="jms.security_credentials"></stringProp>
                <boolProp name="jms.authenticate">false</boolProp>
                <stringProp name="jms.iterations">1</stringProp>
                <stringProp name="jms.read_response">true</stringProp>
                <stringProp name="jms.client_choice">jms_subscriber_receive</stringProp>
                <stringProp name="jms.timeout">30000</stringProp>
                <stringProp name="TestPlan.comments">P.MSG.RCV</stringProp>
              </ru.croc.jmeter.SubscriberSamplerAdopted>
              <hashTree>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1275320095">32&lt;/sgn:Code&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="302788409">&lt;sgn:Description&gt;Ошибка контроля&lt;/sgn:Description&gt;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Результаты транзакции" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <objProp>
          <name></name>
          <value class="SampleSaveConfiguration">
            <time>false</time>
            <latency>false</latency>
            <timestamp>false</timestamp>
            <success>false</success>
            <label>false</label>
            <code>false</code>
            <message>false</message>
            <threadName>false</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
